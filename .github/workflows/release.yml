name: Atlantis - Release
on:
  push:
    tags:
      - '*'

permissions:
  contents: write
  packages: write

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

  tag:
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - name: Copy Repo Files
        uses: actions/checkout@master
      - name: wait for upstream release
        run: sleep 10800 # sleep for 3 hours to give atlantis time to build and push
      - name: get repo
        run: echo 'REPO='$(echo ${{ github.repository }} | cut -d/ -f2)>> $GITHUB_ENV
      - name: get version
        run: echo 'TAG='${GITHUB_REF#refs/tags/} >> $GITHUB_ENV
      - name: Get GitHub organization or user
        run: echo 'ORG='$(echo $(dirname ${GITHUB_REPOSITORY}) | awk '{print tolower($0)}') >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Update Dockerfile FROM org
        run: sed -i.bak "s/FROM.*/FROM ghcr.io\/runatlantis\/${REPO}:${TAG}/" Dockerfile
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          pull: true
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ env.TAG }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

